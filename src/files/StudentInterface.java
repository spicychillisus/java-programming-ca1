/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package files;

/**
 *
 * @author asher
 */
import javax.swing.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.io.*;
import java.util.List;
import java.util.Map;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

public class StudentInterface extends javax.swing.JFrame {

    /**
     * Creates new form StudentInterface
     */
    
    private Student student;
    private StudentManagement sm;
    private Module module;
    private ScanFile scan;
    private ArrayList<Student> allStudents;
    private ArrayList<Module> studModules; // contains the modules each student is taking
    private MainMenu mainMenu;
    private StudentController controller;
    
    private int studIndex = 0;
    private int modIndex = 0;
    private double averageGPA;
    private double totalGPA;
    private ArrayList<Object> results;
    private int moduleIndex = 0;
    

    
    private void initFields() {
        // disable editing
        studentNameDisplay.setEditable(false);
        studentClassDisplay.setEditable(false);
        adminNumberDisplay.setEditable(false);
        gpaDisplay.setEditable(false);
        
        // add the radio button filters to a button gorup
        studentSearchFilter.add(filterByClassSearch);
        studentSearchFilter.add(filterByNameSearch);
        
        // clear all the search displays
        studentNameDisplay.setText("");
        studentClassDisplay.setText("");
        adminNumberDisplay.setText("");
        gpaDisplay.setText("");
        modCodeDisplay.setText("");
        modNameDisplay.setText("");
        modMarksDisplay.setText("");
        modCredUnitDisplay.setText("");
        averageGPADisplay.setText("");
        
        // clear all the all student displays
        allStudDisplayName.setText("");
        allStudClassDisplay.setText("");
        allStudAdminNumDisplay.setText("");
        allStudGPADisplay.setText("");
        allStudModCode.setText("");
        allStudModName.setText("");
        allStudModMarksDisplay.setText("");
        allStudCredUnitDisplay.setText("");
        
        remarksTextPane.setEditable(false);
    }
    
    public StudentInterface() {
        initComponents();
        
        this.sm = new StudentManagement();
        this.scan = new ScanFile();
        
        
        this.controller = new StudentController();
        
        this.allStudents = sm.getStudents();
        
        initFields();
        
        // detect when this window closes
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        addWindowListener(new WindowAdapter(){
            public void windowClose(WindowEvent e) {
                int res = JOptionPane.showConfirmDialog(
                        null,
                        "Exit the student menu?",
                        "Exit",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
                if (res == JOptionPane.YES_OPTION) {
                    setVisible(false);
                    mainMenu.setVisible(true);
                }
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentSearchFilter = new javax.swing.ButtonGroup();
        jButton4 = new javax.swing.JButton();
        Main = new javax.swing.JTabbedPane();
        HomePanel = new javax.swing.JPanel();
        HomePageTopText = new javax.swing.JLabel();
        DescriptionTextPanel = new javax.swing.JPanel();
        text = new javax.swing.JLabel();
        ViewAllStudentsPanel = new javax.swing.JPanel();
        allStudentHeaderText = new javax.swing.JLabel();
        allStudentInfoDisplay = new javax.swing.JPanel();
        allStudentDisplayPanel = new javax.swing.JPanel();
        allStudDisplayName = new javax.swing.JTextField();
        allStudNameLabel = new javax.swing.JLabel();
        allStudClassDisplay = new javax.swing.JTextField();
        allStudClassLabel = new javax.swing.JLabel();
        allStudAdminNum = new javax.swing.JLabel();
        allStudAdminNumDisplay = new javax.swing.JTextField();
        allStudGPALabel = new javax.swing.JLabel();
        allStudGPADisplay = new javax.swing.JTextField();
        allStudNextBtn = new javax.swing.JButton();
        allStudPrevBtn = new javax.swing.JButton();
        studentDropdownBtn = new javax.swing.JComboBox<>();
        allStudentModuleDisplayPanel = new javax.swing.JPanel();
        allStudModCode = new javax.swing.JTextField();
        allStudModLabel = new javax.swing.JLabel();
        allStudModName = new javax.swing.JTextField();
        allStudModNameLabel = new javax.swing.JLabel();
        alStudModMarksLabel = new javax.swing.JLabel();
        allStudModMarksDisplay = new javax.swing.JTextField();
        allStudCreditUnitLabel = new javax.swing.JLabel();
        allStudCredUnitDisplay = new javax.swing.JTextField();
        allStudModNext = new javax.swing.JButton();
        allStudModPrev = new javax.swing.JButton();
        moduleDropDown = new javax.swing.JComboBox<>();
        allStudentRefreshBtn = new javax.swing.JButton();
        allStudDisplayRemarksPanel = new javax.swing.JPanel();
        displayRemarksScrollPane = new javax.swing.JScrollPane();
        displayAllStudentsTextPaneRemarks = new javax.swing.JTextPane();
        allStudRefreshBtn = new javax.swing.JButton();
        SearchStudentsPanel = new javax.swing.JPanel();
        searchHeaderText = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        searchFilterPanel = new javax.swing.JPanel();
        filterByClassSearch = new javax.swing.JRadioButton();
        filterByNameSearch = new javax.swing.JRadioButton();
        studentSearchResults = new javax.swing.JPanel();
        studentDisplayPanel = new javax.swing.JPanel();
        studentNameDisplay = new javax.swing.JTextField();
        studentNameDisplayLabel = new javax.swing.JLabel();
        studentClassDisplay = new javax.swing.JTextField();
        studentClassDisplayLabel = new javax.swing.JLabel();
        adminNumberDisplayLabel = new javax.swing.JLabel();
        adminNumberDisplay = new javax.swing.JTextField();
        gpaDisplayLabel = new javax.swing.JLabel();
        gpaDisplay = new javax.swing.JTextField();
        nextBtn = new javax.swing.JButton();
        prevBtn = new javax.swing.JButton();
        searchStudentDropdown = new javax.swing.JComboBox<>();
        moduleDisplayPanel = new javax.swing.JPanel();
        modCodeDisplay = new javax.swing.JTextField();
        modCodeLabel = new javax.swing.JLabel();
        modNameDisplay = new javax.swing.JTextField();
        modNameLabel = new javax.swing.JLabel();
        modMarksLabel = new javax.swing.JLabel();
        modMarksDisplay = new javax.swing.JTextField();
        modCredUnitLabel = new javax.swing.JLabel();
        modCredUnitDisplay = new javax.swing.JTextField();
        modCordNext = new javax.swing.JButton();
        modCordPrev = new javax.swing.JButton();
        searchStudentModuleDropdown = new javax.swing.JComboBox<>();
        clearStudDetails = new javax.swing.JButton();
        printerBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchRemarks = new javax.swing.JPanel();
        remarksScrollPane = new javax.swing.JScrollPane();
        remarksTextPane = new javax.swing.JTextPane();
        clearSearchBarBtn = new javax.swing.JButton();
        avgClassGPAPanel = new javax.swing.JPanel();
        averageGPALabel = new javax.swing.JLabel();
        averageGPADisplay = new javax.swing.JTextField();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HomePageTopText.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        HomePageTopText.setLabelFor(HomePanel);
        HomePageTopText.setText("Welcome!");
        HomePageTopText.setMaximumSize(new java.awt.Dimension(800, 65));
        HomePageTopText.setMinimumSize(new java.awt.Dimension(800, 65));
        HomePageTopText.setPreferredSize(new java.awt.Dimension(540, 16));

        DescriptionTextPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        text.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        text.setText("<html>     <p>         This program was designed using <u><strong>Apache NetBeans IDE 21</strong></u>, and coded using <u><strong>Java JDK Version 21.</strong></u>     </p>     <br>     <p>         Feel free to play around with the tabs and functions that were implemented here!     </p>     <br>     <p>         This project was done by:         <ul>             <li>Reyes Asher Benedict Calaminos DIT/FT/2B/23</li>             <li>Ng Yu Jie DIT/FT/2B/23</li>         </ul>     </p>  <p>You are currently looking at the user page.</p></html>");
        text.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout DescriptionTextPanelLayout = new javax.swing.GroupLayout(DescriptionTextPanel);
        DescriptionTextPanel.setLayout(DescriptionTextPanelLayout);
        DescriptionTextPanelLayout.setHorizontalGroup(
            DescriptionTextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DescriptionTextPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text)
                .addContainerGap())
        );
        DescriptionTextPanelLayout.setVerticalGroup(
            DescriptionTextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DescriptionTextPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HomePageTopText, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(DescriptionTextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HomePageTopText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DescriptionTextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Main.addTab("Home", HomePanel);

        allStudentHeaderText.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        allStudentHeaderText.setText("View All Students");

        allStudentInfoDisplay.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Results"));

        allStudentDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Student 0 out of 0"));

        allStudDisplayName.setEditable(false);
        allStudDisplayName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudDisplayNameActionPerformed(evt);
            }
        });

        allStudNameLabel.setText("Name");

        allStudClassDisplay.setEditable(false);
        allStudClassDisplay.setText("DCITP/FT/1A/08");
        allStudClassDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudClassDisplayActionPerformed(evt);
            }
        });

        allStudClassLabel.setText("Class");

        allStudAdminNum.setText("Admin No");

        allStudAdminNumDisplay.setEditable(false);
        allStudAdminNumDisplay.setText("2210979");
        allStudAdminNumDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudAdminNumDisplayActionPerformed(evt);
            }
        });

        allStudGPALabel.setText("GPA");

        allStudGPADisplay.setEditable(false);
        allStudGPADisplay.setText("4.0");
        allStudGPADisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudGPADisplayActionPerformed(evt);
            }
        });

        allStudNextBtn.setText("Next >");
        allStudNextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudNextBtnActionPerformed(evt);
            }
        });

        allStudPrevBtn.setText("< Previous");
        allStudPrevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudPrevBtnActionPerformed(evt);
            }
        });

        studentDropdownBtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student 1", "Student 2", "Student 3", "Student 4", "Student 1", "Student 2", "Student 3", "Student 4", "Student 1", "Student 2", "Student 3", "Student 4" }));
        studentDropdownBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropdownBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout allStudentDisplayPanelLayout = new javax.swing.GroupLayout(allStudentDisplayPanel);
        allStudentDisplayPanel.setLayout(allStudentDisplayPanelLayout);
        allStudentDisplayPanelLayout.setHorizontalGroup(
            allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                        .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                                .addComponent(allStudGPALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                                .addComponent(allStudGPADisplay)
                                .addGap(140, 140, 140)))
                        .addComponent(allStudPrevBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allStudNextBtn))
                    .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                        .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(allStudClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(allStudAdminNum))
                        .addGap(0, 555, Short.MAX_VALUE))
                    .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                        .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(allStudAdminNumDisplay, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudClassDisplay, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudDisplayName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(studentDropdownBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        allStudentDisplayPanelLayout.setVerticalGroup(
            allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudentDisplayPanelLayout.createSequentialGroup()
                .addComponent(allStudNameLabel)
                .addGap(3, 3, 3)
                .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allStudDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDropdownBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allStudClassLabel)
                .addGap(3, 3, 3)
                .addComponent(allStudClassDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allStudAdminNum)
                .addGap(3, 3, 3)
                .addComponent(allStudAdminNumDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allStudGPALabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(allStudentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(allStudNextBtn)
                        .addComponent(allStudPrevBtn))
                    .addComponent(allStudGPADisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        allStudentModuleDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Module 0 out of 0"));

        allStudModCode.setEditable(false);
        allStudModCode.setText("ST0509");

        allStudModLabel.setText("Module Code");

        allStudModName.setEditable(false);
        allStudModName.setText("Java Programming");
        allStudModName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudModNameActionPerformed(evt);
            }
        });

        allStudModNameLabel.setText("Module Name");

        alStudModMarksLabel.setText("Marks");

        allStudModMarksDisplay.setEditable(false);
        allStudModMarksDisplay.setText("100");
        allStudModMarksDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudModMarksDisplayActionPerformed(evt);
            }
        });

        allStudCreditUnitLabel.setText("Credit Units");

        allStudCredUnitDisplay.setEditable(false);
        allStudCredUnitDisplay.setText("4");
        allStudCredUnitDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudCredUnitDisplayActionPerformed(evt);
            }
        });

        allStudModNext.setText("Next >");
        allStudModNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudModNextActionPerformed(evt);
            }
        });

        allStudModPrev.setText("< Previous");
        allStudModPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudModPrevActionPerformed(evt);
            }
        });

        moduleDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ST0509", "Item 2", "Item 3", "Item 4", "Item 1", "Item 2", "Item 3", "Item 4", "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout allStudentModuleDisplayPanelLayout = new javax.swing.GroupLayout(allStudentModuleDisplayPanel);
        allStudentModuleDisplayPanel.setLayout(allStudentModuleDisplayPanelLayout);
        allStudentModuleDisplayPanelLayout.setHorizontalGroup(
            allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudentModuleDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(allStudentModuleDisplayPanelLayout.createSequentialGroup()
                        .addGroup(allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(allStudModMarksDisplay, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudModLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudModNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudModName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(alStudModMarksLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudModCode, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(34, 34, 34)
                        .addGroup(allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allStudCreditUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(allStudentModuleDisplayPanelLayout.createSequentialGroup()
                                .addComponent(allStudCredUnitDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                                .addComponent(moduleDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, allStudentModuleDisplayPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(allStudModPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allStudModNext)))
                .addContainerGap())
        );
        allStudentModuleDisplayPanelLayout.setVerticalGroup(
            allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudentModuleDisplayPanelLayout.createSequentialGroup()
                .addGroup(allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(allStudentModuleDisplayPanelLayout.createSequentialGroup()
                        .addComponent(allStudModLabel)
                        .addGap(3, 3, 3)
                        .addComponent(allStudModCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allStudModNameLabel)
                        .addGap(3, 3, 3)
                        .addComponent(allStudModName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alStudModMarksLabel))
                    .addGroup(allStudentModuleDisplayPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(allStudCreditUnitLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allStudCredUnitDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(moduleDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(3, 3, 3)
                .addComponent(allStudModMarksDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addGroup(allStudentModuleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allStudModNext)
                    .addComponent(allStudModPrev))
                .addContainerGap())
        );

        javax.swing.GroupLayout allStudentInfoDisplayLayout = new javax.swing.GroupLayout(allStudentInfoDisplay);
        allStudentInfoDisplay.setLayout(allStudentInfoDisplayLayout);
        allStudentInfoDisplayLayout.setHorizontalGroup(
            allStudentInfoDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudentInfoDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(allStudentInfoDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allStudentDisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allStudentModuleDisplayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        allStudentInfoDisplayLayout.setVerticalGroup(
            allStudentInfoDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudentInfoDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allStudentDisplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allStudentModuleDisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        allStudentRefreshBtn.setBackground(new java.awt.Color(153, 153, 255));
        allStudentRefreshBtn.setForeground(new java.awt.Color(0, 0, 0));
        allStudentRefreshBtn.setText("Refresh");
        allStudentRefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudentRefreshBtnActionPerformed(evt);
            }
        });

        allStudDisplayRemarksPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Remarks"));

        displayAllStudentsTextPaneRemarks.setEditable(false);
        displayRemarksScrollPane.setViewportView(displayAllStudentsTextPaneRemarks);

        javax.swing.GroupLayout allStudDisplayRemarksPanelLayout = new javax.swing.GroupLayout(allStudDisplayRemarksPanel);
        allStudDisplayRemarksPanel.setLayout(allStudDisplayRemarksPanelLayout);
        allStudDisplayRemarksPanelLayout.setHorizontalGroup(
            allStudDisplayRemarksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudDisplayRemarksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayRemarksScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );
        allStudDisplayRemarksPanelLayout.setVerticalGroup(
            allStudDisplayRemarksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allStudDisplayRemarksPanelLayout.createSequentialGroup()
                .addComponent(displayRemarksScrollPane)
                .addContainerGap())
        );

        allStudRefreshBtn.setBackground(new java.awt.Color(204, 255, 204));
        allStudRefreshBtn.setForeground(new java.awt.Color(0, 0, 0));
        allStudRefreshBtn.setText("Export");
        allStudRefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStudRefreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewAllStudentsPanelLayout = new javax.swing.GroupLayout(ViewAllStudentsPanel);
        ViewAllStudentsPanel.setLayout(ViewAllStudentsPanelLayout);
        ViewAllStudentsPanelLayout.setHorizontalGroup(
            ViewAllStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewAllStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewAllStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewAllStudentsPanelLayout.createSequentialGroup()
                        .addComponent(allStudentInfoDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allStudDisplayRemarksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(ViewAllStudentsPanelLayout.createSequentialGroup()
                        .addComponent(allStudentHeaderText, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allStudRefreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allStudentRefreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))))
        );
        ViewAllStudentsPanelLayout.setVerticalGroup(
            ViewAllStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewAllStudentsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(ViewAllStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allStudentHeaderText)
                    .addComponent(allStudentRefreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allStudRefreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ViewAllStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allStudentInfoDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allStudDisplayRemarksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Main.addTab("View All Students", ViewAllStudentsPanel);

        searchHeaderText.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        searchHeaderText.setText("Search");

        searchBar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });

        searchFilterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search By Filters"));

        studentSearchFilter.add(filterByClassSearch);
        filterByClassSearch.setText("By Class");
        filterByClassSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterByClassSearchActionPerformed(evt);
            }
        });

        studentSearchFilter.add(filterByNameSearch);
        filterByNameSearch.setText("By Name");
        filterByNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterByNameSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchFilterPanelLayout = new javax.swing.GroupLayout(searchFilterPanel);
        searchFilterPanel.setLayout(searchFilterPanelLayout);
        searchFilterPanelLayout.setHorizontalGroup(
            searchFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filterByClassSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(filterByNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchFilterPanelLayout.setVerticalGroup(
            searchFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchFilterPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(searchFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterByClassSearch)
                    .addComponent(filterByNameSearch))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        studentSearchResults.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Results"));

        studentDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Student 0 out of 0"));

        studentNameDisplay.setEditable(false);
        studentNameDisplay.setText("student name");
        studentNameDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameDisplayActionPerformed(evt);
            }
        });

        studentNameDisplayLabel.setText("Name");

        studentClassDisplay.setEditable(false);
        studentClassDisplay.setText("DIT/FT/2B/23");
        studentClassDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentClassDisplayActionPerformed(evt);
            }
        });

        studentClassDisplayLabel.setText("Class");

        adminNumberDisplayLabel.setText("Admin No");

        adminNumberDisplay.setEditable(false);
        adminNumberDisplay.setText("2300000");
        adminNumberDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminNumberDisplayActionPerformed(evt);
            }
        });

        gpaDisplayLabel.setText("GPA");

        gpaDisplay.setEditable(false);
        gpaDisplay.setText("4.0");
        gpaDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gpaDisplayActionPerformed(evt);
            }
        });

        nextBtn.setText("Next >");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        prevBtn.setText("< Previous");
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentDisplayPanelLayout = new javax.swing.GroupLayout(studentDisplayPanel);
        studentDisplayPanel.setLayout(studentDisplayPanelLayout);
        studentDisplayPanelLayout.setHorizontalGroup(
            studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(gpaDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(gpaDisplayLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prevBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextBtn))
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentClassDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adminNumberDisplayLabel)
                            .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(adminNumberDisplay, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(studentClassDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentNameDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchStudentDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        studentDisplayPanelLayout.setVerticalGroup(
            studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addComponent(studentNameDisplayLabel)
                        .addGap(7, 7, 7)
                        .addComponent(studentNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchStudentDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentClassDisplayLabel)
                        .addGap(3, 3, 3)
                        .addComponent(studentClassDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminNumberDisplayLabel)
                        .addGap(3, 3, 3)
                        .addComponent(adminNumberDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gpaDisplayLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gpaDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentDisplayPanelLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(studentDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextBtn)
                            .addComponent(prevBtn))))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        moduleDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Module 0 out of 0"));

        modCodeDisplay.setEditable(false);
        modCodeDisplay.setText("ST0509");

        modCodeLabel.setText("Module Code");

        modNameDisplay.setEditable(false);
        modNameDisplay.setText("Java Programming");
        modNameDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modNameDisplayActionPerformed(evt);
            }
        });

        modNameLabel.setText("Module Name");

        modMarksLabel.setText("Marks");

        modMarksDisplay.setEditable(false);
        modMarksDisplay.setText("100");
        modMarksDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modMarksDisplayActionPerformed(evt);
            }
        });

        modCredUnitLabel.setText("Credit Units");

        modCredUnitDisplay.setEditable(false);
        modCredUnitDisplay.setText("34");
        modCredUnitDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modCredUnitDisplayActionPerformed(evt);
            }
        });

        modCordNext.setText("Next >");
        modCordNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modCordNextActionPerformed(evt);
            }
        });

        modCordPrev.setText("< Previous");
        modCordPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modCordPrevActionPerformed(evt);
            }
        });

        searchStudentModuleDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStudentModuleDropdownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout moduleDisplayPanelLayout = new javax.swing.GroupLayout(moduleDisplayPanel);
        moduleDisplayPanel.setLayout(moduleDisplayPanelLayout);
        moduleDisplayPanelLayout.setHorizontalGroup(
            moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moduleDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(moduleDisplayPanelLayout.createSequentialGroup()
                        .addGroup(moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modCodeLabel)
                            .addComponent(modNameLabel)
                            .addComponent(modMarksLabel)
                            .addComponent(modNameDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(modCodeDisplay)
                            .addComponent(modMarksDisplay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modCredUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(modCredUnitDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addGap(76, 76, 76)
                        .addComponent(searchStudentModuleDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, moduleDisplayPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(modCordPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modCordNext)))
                .addContainerGap())
        );
        moduleDisplayPanelLayout.setVerticalGroup(
            moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moduleDisplayPanelLayout.createSequentialGroup()
                .addGroup(moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(moduleDisplayPanelLayout.createSequentialGroup()
                        .addComponent(modCodeLabel)
                        .addGap(3, 3, 3)
                        .addComponent(modCodeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modNameLabel)
                        .addGap(3, 3, 3)
                        .addComponent(modNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modMarksLabel))
                    .addGroup(moduleDisplayPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modCredUnitLabel)
                            .addComponent(searchStudentModuleDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modCredUnitDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addComponent(modMarksDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(moduleDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modCordNext)
                    .addComponent(modCordPrev))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        clearStudDetails.setText("Clear Details");
        clearStudDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearStudDetailsActionPerformed(evt);
            }
        });

        printerBtn.setText("Export Data");
        printerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentSearchResultsLayout = new javax.swing.GroupLayout(studentSearchResults);
        studentSearchResults.setLayout(studentSearchResultsLayout);
        studentSearchResultsLayout.setHorizontalGroup(
            studentSearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentSearchResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentSearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentDisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moduleDisplayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentSearchResultsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(printerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearStudDetails)))
                .addContainerGap())
        );
        studentSearchResultsLayout.setVerticalGroup(
            studentSearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentSearchResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentSearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearStudDetails)
                    .addComponent(printerBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentDisplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moduleDisplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchRemarks.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Remarks"));

        remarksTextPane.setEditable(false);
        remarksScrollPane.setViewportView(remarksTextPane);

        javax.swing.GroupLayout searchRemarksLayout = new javax.swing.GroupLayout(searchRemarks);
        searchRemarks.setLayout(searchRemarksLayout);
        searchRemarksLayout.setHorizontalGroup(
            searchRemarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchRemarksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(remarksScrollPane)
                .addContainerGap())
        );
        searchRemarksLayout.setVerticalGroup(
            searchRemarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchRemarksLayout.createSequentialGroup()
                .addComponent(remarksScrollPane)
                .addContainerGap())
        );

        clearSearchBarBtn.setText("Clear Search");
        clearSearchBarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSearchBarBtnActionPerformed(evt);
            }
        });

        avgClassGPAPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Average Class GPA"));

        averageGPALabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        averageGPALabel.setText("Average GPA of Class --:");

        averageGPADisplay.setEditable(false);
        averageGPADisplay.setText("4.0");
        averageGPADisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averageGPADisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout avgClassGPAPanelLayout = new javax.swing.GroupLayout(avgClassGPAPanel);
        avgClassGPAPanel.setLayout(avgClassGPAPanelLayout);
        avgClassGPAPanelLayout.setHorizontalGroup(
            avgClassGPAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avgClassGPAPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(avgClassGPAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(averageGPALabel, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(averageGPADisplay))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        avgClassGPAPanelLayout.setVerticalGroup(
            avgClassGPAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avgClassGPAPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(averageGPALabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(averageGPADisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SearchStudentsPanelLayout = new javax.swing.GroupLayout(SearchStudentsPanel);
        SearchStudentsPanel.setLayout(SearchStudentsPanelLayout);
        SearchStudentsPanelLayout.setHorizontalGroup(
            SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentSearchResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchBar, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SearchStudentsPanelLayout.createSequentialGroup()
                        .addComponent(searchHeaderText, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(SearchStudentsPanelLayout.createSequentialGroup()
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(386, 386, 386)
                        .addComponent(clearSearchBarBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchFilterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchRemarks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(avgClassGPAPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        SearchStudentsPanelLayout.setVerticalGroup(
            SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SearchStudentsPanelLayout.createSequentialGroup()
                        .addComponent(searchHeaderText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBtn)
                            .addComponent(clearSearchBarBtn))
                        .addGap(6, 6, 6))
                    .addComponent(searchFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentSearchResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(SearchStudentsPanelLayout.createSequentialGroup()
                        .addComponent(avgClassGPAPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchRemarks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        Main.addTab("Search", SearchStudentsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Main)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Main)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearSearchFields() {
        studentNameDisplay.setText("");
        studentClassDisplay.setText("");
        adminNumberDisplay.setText("");
        gpaDisplay.setText("");
        modCodeDisplay.setText("");
        modNameDisplay.setText("");
        modMarksDisplay.setText("");
        modCredUnitDisplay.setText("");
        averageGPADisplay.setText("");
        
        filterByClassSearch.setSelected(false);
        filterByNameSearch.setSelected(false);
    }
    
    
    private void textTimer(double delay) {
        /**
         * The time should be set in seconds
         */
        int timerMs = (int)delay * 1000;
        Timer timer = new Timer(timerMs, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    remarksTextPane.setText("");
                }
            });
            
            timer.setRepeats(false);
            timer.start();
    }
    
    private String noFilter() {
        String noFilterText = "Please select a filter!";
        return noFilterText;
    }
    
    String studentNameDisplayFormat = "Details for Student %s has been displayed.";
    String classDisplayFormat = "Details for Class %s has been displayed.";
    String studDisplayPanelTextFormat = "Student %d out of %d";
    String modDisplayPaneTextFormat = "Module %d out of %d";
    String averageGPALabelText = "Average GPA of Class %s :";
    
    private String searchContent;
    private Map<String, Student> studentMap;
    
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        // display results based on filter
        // both filters cannot be enabled in the same time
        searchContent = searchBar.getText();
        
        // info to display if filter search is based on class
        if (filterByClassSearch.isSelected()) {

            if ("".equals(searchContent)) {
                System.out.println("class search ready but no input!");
                remarksTextPane.setText("Please enter a class to search.");
                textTimer(6);
            } else {
                // get class input
                studentMap = sm.searchStudentByClass(searchContent);
                if (studentMap.size() == 1 && studentMap.containsKey("No students found")) {
                    remarksTextPane.setText("No students found in the specified class.");
                    clearSearchFields();
                
                } else {
                    totalGPA = 0;
                    student = studentMap.values().stream().findFirst().orElse(null);
                    if (student != null) {
                        System.out.println(student);
                        

                        
                        if (!studentMap.isEmpty() && studIndex >= 0 && studIndex < studentMap.size()) {
                            studentNameDisplay.setText(student.getName());
                            studentClassDisplay.setText(student.getStudentClass());
                            adminNumberDisplay.setText(student.getAdminNumber());
                            gpaDisplay.setText(String.format("%.2f", student.getGPA()));
                            totalGPA += student.getGPA();
                            
                            //System.out.println(studIndex);
                        }
                        
                        //System.out.println(studentMap.size());
                        //System.out.println(studIndex);
                        
                        
                        studModules = student.getModules();
                        //System.out.println(studModules.size());
                        //System.out.println(studModules.get(1).getModuleCode());
                        if (studModules.isEmpty()) {
                            modCodeDisplay.setText("");
                            modNameDisplay.setText("");
                            modMarksDisplay.setText("");
                            modCredUnitDisplay.setText("");
                            
                            controller.changeTitledBorderText(moduleDisplayPanel, "Student 0 out of 0");
                            averageGPADisplay.setText("");
                        } else {
                            System.out.println(studModules);
                            
                            if (!studModules.isEmpty() && moduleIndex >= 0 && moduleIndex < studModules.size()) {
                                modCodeDisplay.setText(studModules.get(moduleIndex).getModuleCode());
                                modNameDisplay.setText(studModules.get(moduleIndex).getModuleName());
                                modMarksDisplay.setText(String.valueOf(studModules.get(moduleIndex).getMarks()));
                                modCredUnitDisplay.setText(String.valueOf(studModules.get(moduleIndex).getCreditUnit()));
                                //System.out.println(moduleIndex+1);
                                //System.out.println(studModules.get(moduleIndex).getModuleCode());
                                System.out.println(searchStudentModuleDropdown.getItemCount());
                                if (searchStudentModuleDropdown.getItemCount() > 0) {
                                    // if there are items in the dropdown, remove them and then add in modules of the next class searched
                                    searchStudentModuleDropdown.removeAllItems();
                                    searchStudentModuleDropdown.addItem(studModules.get(moduleIndex).getModuleCode());
                                } else {
                                    searchStudentModuleDropdown.addItem(studModules.get(moduleIndex).getModuleCode());
                                }
                            }

                            averageGPA = totalGPA/studentMap.size();
                            averageGPADisplay.setText(String.valueOf(averageGPA));

                            
                        }
                    }


                    remarksTextPane.setText(String.format(classDisplayFormat, searchContent.toUpperCase()));
                    averageGPALabel.setText(String.format(averageGPALabelText, searchContent.toUpperCase()));
                    controller.changeTitledBorderText(studentDisplayPanel, String.format(
                            studDisplayPanelTextFormat, 
                            studIndex+1, // this will increase if there are more data
                            studentMap.size()
                    ));
                    

                    
                    controller.changeTitledBorderText(moduleDisplayPanel, String.format(
                        modDisplayPaneTextFormat,
                        moduleIndex+1, // will increase with more data
                        studModules.size()
                    ));
                    
                    textTimer(4);
                }      
            }
        } else if (filterByNameSearch.isSelected()) {
            if ("".equals(searchContent)) {
                
                
                System.out.println("name search ready but no input!");
                remarksTextPane.setText("Please enter a student name to search.");
                textTimer(2);
            } else {
                // display data based on the name entered
                // if there are 2 people with the same name, both will be displayed (please remember your own admin number)
                allStudents = sm.getStudents();
                ArrayList<Student> studResults = sm.getStudentDataByName(searchContent, allStudents);
                
                remarksTextPane.setText(String.format(studentNameDisplayFormat, searchContent));
                System.out.println(studResults.get(1).getModules());
                
                
            }
        } else {
            remarksTextPane.setText(noFilter());
            textTimer(2);
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private int currentModIndex;
    private int currentStudentIndex;
    
    private void studentClassDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentClassDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentClassDisplayActionPerformed

    private void gpaDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gpaDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gpaDisplayActionPerformed
    
    private int currentIndex = 0;
    private List<Student> studentList = new ArrayList<>();
    
    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        if (filterByClassSearch.isSelected()) {
            try {
                studentMap = sm.searchStudentByClass(searchContent);
                studentList = new ArrayList<>(studentMap.values()); // Convert map values to list
                System.out.println(studentList);
                if (currentIndex < studentList.size() - 1) {
                    currentIndex++;
                    student = studentList.get(currentIndex);
                    System.out.println(currentIndex);


                } 
            } catch (NullPointerException e) {
                e.printStackTrace();
                System.err.println("enter smth");
            }
        }
        
        
    }//GEN-LAST:event_nextBtnActionPerformed

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBtnActionPerformed
        // TODO add your handling code here:
        if (filterByClassSearch.isSelected()) {
            try {
                studentMap = sm.searchStudentByClass(searchContent);
                studentList = new ArrayList<>(studentMap.values()); // Convert map values to list
                // Assume studentMap and studentList have been initialized previously
                if (studentMap == null || studentList == null) {
                    System.err.println("Student data is not loaded.");
                    return;
                }

                if (currentIndex > 0) {
                    currentIndex--;
                    student = studentList.get(currentIndex);
                    System.out.println("Current index: " + currentIndex);
                    System.out.println("Displaying student: " + student);
                } else {
                    System.out.println("No previous students to display.");
                }
            } catch (NullPointerException e) {
                e.printStackTrace();
                System.err.println("An error occurred: " + e.getMessage());
            }
        }
        
    }//GEN-LAST:event_prevBtnActionPerformed

    private void modNameDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modNameDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modNameDisplayActionPerformed

    private void modCredUnitDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modCredUnitDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modCredUnitDisplayActionPerformed
    
    
    
    private void modCordNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modCordNextActionPerformed
        // TODO add your handling code here:
        if (modIndex < studModules.size()) {
            modIndex = modIndex + 1;
        }
        
            int modIndexDisplay = modIndex + 1;
            try {
                if (modIndex < studModules.size() && modIndex > -1) {
                    System.out.println("Module" + modIndex);
                    controller.changeTitledBorderText(moduleDisplayPanel, String.format(
                            modDisplayPaneTextFormat, 
                            modIndexDisplay, 
                            studModules.size()
                    ));
                    System.out.println(studModules.get(modIndex).getModuleCode());
                }

            } catch (IndexOutOfBoundsException e) {
                System.out.println("no");
                e.getMessage();
                e.getStackTrace();
            }
        
        
    }//GEN-LAST:event_modCordNextActionPerformed

    private void modCordPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modCordPrevActionPerformed
        // TODO add your handling code here:
        
        if (modIndex > 0) {
            modIndex = modIndex - 1;
        }
        

        try {
            if (modIndex <= studModules.size() && modIndex > -1) {
                System.out.println("Module" + modIndex);
                
                int modIndexDisplay = modIndex + 1;
                
                controller.changeTitledBorderText(moduleDisplayPanel, String.format(
                        modDisplayPaneTextFormat, 
                        modIndexDisplay, 
                        studModules.size()
                ));
                System.out.println(studModules.get(modIndex).getModuleCode());
            }
            
        } catch (IndexOutOfBoundsException e) {
            System.out.println("no");
            e.getMessage();
            e.getStackTrace();
        }
    }//GEN-LAST:event_modCordPrevActionPerformed

    private void modMarksDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modMarksDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modMarksDisplayActionPerformed

    private void allStudClassDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudClassDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudClassDisplayActionPerformed

    private void allStudGPADisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudGPADisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudGPADisplayActionPerformed

    private void allStudNextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudNextBtnActionPerformed
        // TODO add your handling code here:
        allStudents = sm.getStudents();
        System.out.println(currentStudIndex);
        System.out.println(allStudents);
        
        
        
        if (currentStudIndex < allStudents.size() && currentStudIndex > -1) {
            currentStudIndex = currentStudIndex + 1;
        }
        
        int displayStudIndex = currentStudIndex; // index to be displayed in the titled border
        
        // change the title border accordingly
        controller.changeTitledBorderText(allStudentDisplayPanel, String.format("Student %d out of %d", displayStudIndex, allStudents.size()));
    }//GEN-LAST:event_allStudNextBtnActionPerformed

    private void allStudPrevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudPrevBtnActionPerformed
        // TODO add your handling code here:
        allStudents = sm.getStudents();
        System.out.println(currentStudIndex);
        System.out.println(allStudents);
        
        
        
        if (currentStudIndex > 0) {
            currentStudIndex = currentStudIndex - 1;
        }
        
        int displayStudIndex = currentStudIndex+1; // index to be displayed in the titled border
        
        // change the title border accordingly
        controller.changeTitledBorderText(allStudentDisplayPanel, String.format("Student %d out of %d", displayStudIndex, allStudents.size()));
    }//GEN-LAST:event_allStudPrevBtnActionPerformed

    private void allStudModNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudModNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudModNameActionPerformed

    private void allStudModMarksDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudModMarksDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudModMarksDisplayActionPerformed

    private void allStudCredUnitDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudCredUnitDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudCredUnitDisplayActionPerformed

    private void allStudModNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudModNextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudModNextActionPerformed

    private void allStudModPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudModPrevActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudModPrevActionPerformed
    
    private void addNewStudentData() {
        sm.addStudentDataFromFile();
    }
    
    private void getScannedData() {
        try {
            scan.fileReader("students.txt");
            scan.sectionData();
            System.out.println(scan.getStudentName());
        } catch (IOException e) {
            e.getMessage();
        }
    }
    
    

    
    private ArrayList<Student> allStudentsArray;
    private int currentStudIndex = 0;
    private int currentStudModIndex = 0;
    
    private void allStudentRefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudentRefreshBtnActionPerformed
        // TODO add your handling code here:
        
        getScannedData();
        addNewStudentData();
        
        
        allStudentsArray = sm.getStudents();
        System.out.println(allStudentsArray.size());
        //System.out.println(allStudentsArray);
        //currentStudIndex = 0;
        if (!allStudentsArray.isEmpty() && currentStudIndex >= 0 && currentStudIndex < allStudentsArray.size()) {
            // display data based on the array index
            Student studDisplay = allStudentsArray.get(currentStudIndex);
            // fill in text fields with relevant data
            allStudDisplayName.setText(studDisplay.getName());
            allStudClassDisplay.setText(studDisplay.getStudentClass());
            allStudAdminNumDisplay.setText(studDisplay.getAdminNumber());
            allStudGPADisplay.setText(String.format("%.2f", studDisplay.getGPA()));
            
            // change the title border text accordingly
            controller.changeTitledBorderText(allStudentDisplayPanel, String.format(
                    studDisplayPanelTextFormat, 
                    currentStudIndex + 1,
                    allStudentsArray.size()
            ));
            
            // display the modules
            Module modDisplay = studDisplay.getModules().get(currentStudIndex);
            allStudModCode.setText(modDisplay.getModuleCode());
            allStudModName.setText(modDisplay.getModuleName());
            allStudModMarksDisplay.setText(String.valueOf(modDisplay.getMarks()));
            allStudCredUnitDisplay.setText(String.valueOf(modDisplay.getCreditUnit()));
            controller.changeTitledBorderText(allStudentModuleDisplayPanel, String.format(
                    modDisplayPaneTextFormat,
                    currentStudModIndex + 1,
                    studDisplay.getModules().size()
            ));
            
            
        }
        //System.out.println(currentStudIndex);
        //System.out.println(studModules);
        
        
        displayAllStudentsTextPaneRemarks.setText("All students displayed!");
        textTimer(3.2);
    }//GEN-LAST:event_allStudentRefreshBtnActionPerformed

    private void allStudAdminNumDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudAdminNumDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudAdminNumDisplayActionPerformed

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchBarActionPerformed

    private void adminNumberDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminNumberDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminNumberDisplayActionPerformed

    private void filterByClassSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterByClassSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterByClassSearchActionPerformed

    private void filterByNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterByNameSearchActionPerformed
        // TODO add your handling code here:
        // filter the search by name
    }//GEN-LAST:event_filterByNameSearchActionPerformed

    private void studentDropdownBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropdownBtnActionPerformed
        // TODO add your handling code here:
        // for every new student add a model
    }//GEN-LAST:event_studentDropdownBtnActionPerformed

    private void clearStudDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearStudDetailsActionPerformed
        // TODO add your handling code here:
        clearSearchFields();
        controller.changeTitledBorderText(studentDisplayPanel, "Student 0 out of 0");
        controller.changeTitledBorderText(moduleDisplayPanel, "Student 0 out of 0");
        searchStudentModuleDropdown.removeAllItems();
        averageGPALabel.setText(String.format(averageGPALabelText, "--"));
        
        remarksTextPane.setText("All panels cleared!");
        
        
    }//GEN-LAST:event_clearStudDetailsActionPerformed

    private void clearSearchBarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSearchBarBtnActionPerformed
        // TODO add your handling code here:
        searchBar.setText("");
        
        filterByClassSearch.setSelected(false);
        filterByNameSearch.setSelected(false);
        
        
        
        remarksTextPane.setText("Search filters cleared!");
        Timer timer = new Timer(2000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    remarksTextPane.setText("");
                }
            });
            
            timer.setRepeats(false);
            timer.start();
    }//GEN-LAST:event_clearSearchBarBtnActionPerformed

    private void studentNameDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameDisplayActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_studentNameDisplayActionPerformed

    private void printerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printerBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printerBtnActionPerformed

    private void averageGPADisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_averageGPADisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_averageGPADisplayActionPerformed

    private void allStudDisplayNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudDisplayNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allStudDisplayNameActionPerformed

    private void searchStudentModuleDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStudentModuleDropdownActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchStudentModuleDropdownActionPerformed

    private void allStudRefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStudRefreshBtnActionPerformed
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_allStudRefreshBtnActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DescriptionTextPanel;
    private javax.swing.JLabel HomePageTopText;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JTabbedPane Main;
    private javax.swing.JPanel SearchStudentsPanel;
    private javax.swing.JPanel ViewAllStudentsPanel;
    private javax.swing.JTextField adminNumberDisplay;
    private javax.swing.JLabel adminNumberDisplayLabel;
    private javax.swing.JLabel alStudModMarksLabel;
    private javax.swing.JLabel allStudAdminNum;
    private javax.swing.JTextField allStudAdminNumDisplay;
    private javax.swing.JTextField allStudClassDisplay;
    private javax.swing.JLabel allStudClassLabel;
    private javax.swing.JTextField allStudCredUnitDisplay;
    private javax.swing.JLabel allStudCreditUnitLabel;
    private javax.swing.JTextField allStudDisplayName;
    private javax.swing.JPanel allStudDisplayRemarksPanel;
    private javax.swing.JTextField allStudGPADisplay;
    private javax.swing.JLabel allStudGPALabel;
    private javax.swing.JTextField allStudModCode;
    private javax.swing.JLabel allStudModLabel;
    private javax.swing.JTextField allStudModMarksDisplay;
    private javax.swing.JTextField allStudModName;
    private javax.swing.JLabel allStudModNameLabel;
    private javax.swing.JButton allStudModNext;
    private javax.swing.JButton allStudModPrev;
    private javax.swing.JLabel allStudNameLabel;
    private javax.swing.JButton allStudNextBtn;
    private javax.swing.JButton allStudPrevBtn;
    private javax.swing.JButton allStudRefreshBtn;
    private javax.swing.JPanel allStudentDisplayPanel;
    private javax.swing.JLabel allStudentHeaderText;
    private javax.swing.JPanel allStudentInfoDisplay;
    private javax.swing.JPanel allStudentModuleDisplayPanel;
    private javax.swing.JButton allStudentRefreshBtn;
    private javax.swing.JTextField averageGPADisplay;
    private javax.swing.JLabel averageGPALabel;
    private javax.swing.JPanel avgClassGPAPanel;
    private javax.swing.JButton clearSearchBarBtn;
    private javax.swing.JButton clearStudDetails;
    private javax.swing.JTextPane displayAllStudentsTextPaneRemarks;
    private javax.swing.JScrollPane displayRemarksScrollPane;
    private javax.swing.JRadioButton filterByClassSearch;
    private javax.swing.JRadioButton filterByNameSearch;
    private javax.swing.JTextField gpaDisplay;
    private javax.swing.JLabel gpaDisplayLabel;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField modCodeDisplay;
    private javax.swing.JLabel modCodeLabel;
    private javax.swing.JButton modCordNext;
    private javax.swing.JButton modCordPrev;
    private javax.swing.JTextField modCredUnitDisplay;
    private javax.swing.JLabel modCredUnitLabel;
    private javax.swing.JTextField modMarksDisplay;
    private javax.swing.JLabel modMarksLabel;
    private javax.swing.JTextField modNameDisplay;
    private javax.swing.JLabel modNameLabel;
    private javax.swing.JPanel moduleDisplayPanel;
    private javax.swing.JComboBox<String> moduleDropDown;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton prevBtn;
    private javax.swing.JButton printerBtn;
    private javax.swing.JScrollPane remarksScrollPane;
    private javax.swing.JTextPane remarksTextPane;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchBtn;
    private javax.swing.JPanel searchFilterPanel;
    private javax.swing.JLabel searchHeaderText;
    private javax.swing.JPanel searchRemarks;
    private javax.swing.JComboBox<String> searchStudentDropdown;
    private javax.swing.JComboBox<String> searchStudentModuleDropdown;
    private javax.swing.JTextField studentClassDisplay;
    private javax.swing.JLabel studentClassDisplayLabel;
    private javax.swing.JPanel studentDisplayPanel;
    private javax.swing.JComboBox<String> studentDropdownBtn;
    private javax.swing.JTextField studentNameDisplay;
    private javax.swing.JLabel studentNameDisplayLabel;
    private javax.swing.ButtonGroup studentSearchFilter;
    private javax.swing.JPanel studentSearchResults;
    private javax.swing.JLabel text;
    // End of variables declaration//GEN-END:variables
}
